{
    "url": "https://en.wikipedia.org/wiki/Robotics_simulator",
    "title": "Robotics simulator",
    "table_of_contents": [
        "1 Features",
        "2 Simulators",
        "2.1 General information",
        "2.2 Technical information",
        "2.3 Infrastructure",
        "2.3.1 Support",
        "2.3.2 Code Quality",
        "2.4 Features",
        "2.4.1 Families of robots",
        "2.4.2 Supported actuators",
        "2.4.3 Supported sensors",
        "3 References",
        "4 External links"
    ],
    "paragraphs": [
        {
            "title": "",
            "text": "A robotics simulator is a simulator used to create application for a physical robot without depending on the actual machine, thus saving cost and time. In some case, these applications can be transferred onto the physical robot (or rebuilt) without modifications.\n\nThe term robotics simulator can refer to several different robotics simulation applications.  For example, in mobile robotics applications, behavior-based robotics simulators allow users to create simple worlds of rigid objects and light sources and to program robots to interact with these worlds.  Behavior-based simulation allows for actions that are more biological in nature when compared to simulators that are more binary, or computational.  In addition, behavior-based simulators may \"learn\" from mistakes and are capable of demonstrating the anthropomorphic quality of tenacity.\n\nOne of the most popular applications for robotics simulators is for 3D modeling and rendering of a robot and its environment.  This type of robotics software has a simulator that is a virtual robot, which is capable of emulating the motion of an actual robot in a real work envelope. Some robotics simulators use a physics engine for more realistic motion generation of the robot.  The use of a robotics simulator for development of a robotics control program is highly recommended regardless of whether an actual robot is available or not.  The simulator allows for robotics programs to be conveniently written and debugged off-line with the final version of the program tested on an actual robot. This primarily holds for industrial robotic applications only, since the success of off-line programming depends on how similar the real environment of the robot is to the simulated environment.\n\nSensor-based robot actions are much more difficult to simulate and/or to program off-line, since the robot motion depends on the instantaneous sensor readings in the real world.\n\n"
        },
        {
            "title": "Features",
            "text": "Modern simulators tend to provide the following features:\n\n"
        },
        {
            "title": "Simulators",
            "text": "Among the newest technologies available today for programming are those which use a virtual simulation. Simulations with the use of virtual models of the working environment and the robots themselves can offer advantages to both the company and programmer. By using a simulation, costs are reduced, and robots can be programmed off-line which eliminates any down-time for an assembly line. Robot actions and assembly parts can be visualised in a 3-dimensional virtual environment months before prototypes are even produced. Writing code for a simulation is also easier than writing code for a physical robot. While the move toward virtual simulations for programming robots is a step forward in user interface design, many such applications are only in their infancy.\n\n"
        }
    ]
}
{
    "url": "https://en.wikipedia.org/wiki/Mindstorms_NXT",
    "title": "Lego Mindstorms NXT",
    "table_of_contents": [
        "1 NXT Intelligent Brick",
        "1.1 Development kits",
        "2 Programming",
        "2.1 NXT-G",
        "2.2 C# with Microsoft Robotics Developer Studio",
        "2.3 BricxCC, Next Byte Codes, Not eXactly C",
        "2.4 Robolab",
        "2.5 RoboMind",
        "2.6 Enchanting",
        "2.7 ROBOTC",
        "2.8 NXTGCC",
        "2.9 leJOS NXT",
        "2.10 nxtOSEK",
        "2.11 ICON",
        "2.12 MATLAB and Simulink",
        "2.13 Lua",
        "2.14 Ada",
        "2.15 URBI",
        "2.16 FLL NXT Navigation",
        "2.17 Ruby-nxt",
        "2.18 Robotics.NXT",
        "2.19 LibNXT",
        "2.20 C_NXT",
        "2.21 PyNXC",
        "2.22 NXT-Python",
        "2.23 LEGO Mindstorms EV3 Software",
        "2.24 Physical Etoys",
        "2.25 C/C++ Interpreter Ch",
        "3 Sensors and Actuators",
        "3.1 Connector",
        "4 NXT 2.0",
        "4.1 8547 Kit Features",
        "4.1.1 NXT Intelligent Brick",
        "4.1.2 Sensors",
        "4.1.3 Actuators",
        "4.2 Programming",
        "4.2.1 NXT-G",
        "4.2.2 LabVIEW Toolkit",
        "4.2.3 Lego::NXT",
        "4.2.4 Ada",
        "4.2.5 Next Byte Codes & Not eXactly C",
        "4.2.6 ROBOTC",
        "4.2.7 RoboMind",
        "4.2.8 NXTGCC",
        "4.2.9 URBI",
        "4.2.10 leJOS NXJ",
        "4.2.11 nxtOSEK",
        "4.2.12 MATLAB and Simulink",
        "4.2.13 Lua",
        "4.2.14 FLL NXT Navigation",
        "4.2.15 ruby-nxt",
        "4.2.16 Robotics. NXT",
        "5 See also",
        "6 References",
        "7 External links"
    ],
    "paragraphs": [
        {
            "title": "",
            "text": "Lego Mindstorms NXT is a programmable robotics kit released by Lego on August 2, 2006.[1][2][non-primary source needed]\nIt replaced the first-generation Lego Mindstorms kit, which was called the Robotics Invention System. The base kit ships in two versions: the Retail Version (set #8527)[3] and the Education Base Set (set #9797).[4] It comes with the NXT-G programming software, or optionally LabVIEW for Lego Mindstorms.[5] A variety of unofficial languages exist, such as NXC, NBC, leJOS NXJ, and RobotC. The second generation of the set, the Lego Mindstorms NXT 2.0, was released on August 1, 2009, featuring a color sensor and other upgraded capabilities. The third generation, the EV3, was released in September 2013.\n\n"
        },
        {
            "title": "NXT Intelligent Brick",
            "text": "The main component in the kit is a brick shaped computer called the NXT Intelligent Brick. It can take input from up to four sensors and control up to three motors, via a modified version of RJ12 cables, very much similar to but incompatible with RJ11 phone cords. The plastic pin to hold the cable in the socket is moved slightly to the right. The brick has a 100×64 pixel monochrome LCD and four buttons that can be used to navigate a user interface using hierarchical menus. It has a 32-bit ARM7TDMI-core Atmel AT91SAM7S256 microcontroller with 256 KB of FLASH memory and 64 KB of RAM, plus an 8-bit Atmel AVR ATmega48 microcontroller, and bluetooth support. It also has a speaker and can play sound files at sampling rates up to 8 kHz. Power is supplied by 6 AA (1.5 V each) batteries in the consumer version of the kit and by a Li-Ion rechargeable battery and charger in the educational version.\n\nThe Intelligent Brick remains unchanged with NXT 2.0. A black version of the brick was made to celebrate the 10th anniversary of the Mindstorms System with no change to the internals.\n\nLego has released the firmware for the NXT Intelligent Brick as open source, along with schematics for all hardware components.[6]\n\nSeveral developer kits are available that contain documentation for the NXT:\n\n"
        },
        {
            "title": "Programming",
            "text": "Very simple programs can be created using the menu on the NXT Intelligent Brick. More complicated programs and sound files can be downloaded using a USB port or wirelessly using Bluetooth. Files can also be copied between two NXT bricks wirelessly, and some mobile phones can be used as a remote control. Up to three NXT bricks can communicate simultaneously via Bluetooth when user created programs are run.\n\nThe retail version of the kit includes software for writing programs that run on Windows and Mac OS personal computers. The software is based on National Instruments LabVIEW and provides a visual programming language for writing simple programs and downloading them to the NXT Brick.  This means that rather than requiring users to write lines of code, they instead can use flowchart like \"blocks\" to design their program.\n\nNXT-G v2.0 is a graphical programming environment that comes bundled with the NXT.  With careful construction of blocks and wires to encapsulate complexity, NXT-G can be used for real-world programming.  Parallel \"sequence beams\" are actually parallel threads, so this software is quite good for running a handful of parallel sense/respond loops (example: wait 60 seconds, play a \"bonk\" sound at low volume if battery is low, loop), or blending autonomous control with bluetooth or other \"remote control\".  The language supports virtual instruments for all Lego branded and most 3rd party sensors/components. Version 2.0 contains new tutorial challenges, a remote control, custom graphics and sound designers, and new Lego color sensor support.  Community support is significant.[7]\n\nFree tools (Visual Studio Express in combination with the Robotics Developer Studio) enable programming the NXT using the C# language.[8] Other supported languages include IronPython and VB.NET.[citation needed]\n\nBricx Command Center (BricxCC) is the integrated development environment (IDE) used to write, compile, and edit NBC and NXC programs for the NXT. Also, as BricxCC was originally made for the RCX, programs for it can be written using NQC via BricxCC.\nDifferent firmware versions can be flashed to the NXT using BricxCC.\n\nBricxCC has many utilities such as NeXTExplorer (upload/download files, defragment the NXT, use file hex viewer), NeXTScreen (view what's on the NXT's LCD, and capture images and video).\n\nNext Byte Codes (NBC) is a simple open source language with an assembly language syntax that can be used to program the NXT brick. BricxCC also has the capability to decompile standard .rxe NXT executables to NBC.\n\nNot eXactly C (NXC) is a high level open-source language,[9] similar to C, built on the NBC compiler. It can also be used to program the NXT brick. NXC is basically NQC for the NXT.[10] It is one of the most widely used third-party programming languages for the NXT. In NXC, even creating video games for the NXT is possible. Some people have even got working grayscale on the NXT Screen.\n\nRobolab 2.9\nRobolab is the newer programming environment originally used on the RCX programmable brick.  Version 2.9 has been updated so that it can be used to program the NXT brick.  Lego has announced that it will stop officially supporting Robolab but Robolab 2.9 is still available[11] and there are still many user forums and other sources of help available.\n\nRoboMind is educational software that is specially developed to teach students about logic, programming and robotics. The strength of RoboMind is the compactness of the learning environment, which allows to quickly develop and test scripts in a virtual environment. The scripts can then directly be transferred to a Lego Mindstorms NXT robot, to see the result in real life.[12] RoboMind script run on the standard firmware.\n\nEnchanting brings NXT programming into the popular Scratch IDE, designed by the Lifelong Kindergarten Group at MIT to make programming intuitive even for young children.  The resulting NXT programs have the compactness and clarity offered by that programming environment.\n\nROBOTC is a programming-language based on C for VEX, the VEX Cortex, FIRST Tech Challenge, and Lego Mindstorms. ROBOTC runs a very optimized firmware which allows the NXT to run programs very quickly, and also compresses the files so that a large number of programs can fit into the NXT. Like other NXT languages, ROBOTC requires this firmware to be downloaded from the ROBOTC interface in order to run.\n\nNXTGCC is a GCC toolchain for programming the NXT firmware in C.\n\nleJOS NXJ is a high level open source language based on Java that uses custom firmware developed by the leJOS team.[13]\n\nTo be able to write in C/C++, nxtOSEK can be used, but that requires custom firmware too.[14]\n\nTo write files on the NXT itself, ICON[15] by Steve Hassenplug[16] is an ideal resource.\n\nMATLAB and Simulink Support for Lego Mindstorms programming is freely available.  More information is online.[18]\n\nplLua[19] is a port of the Lua programming language, a general purpose scripting language, for Lego Mindstorms.\n\nA port of GNAT[20] is available for the NXT. It relies on a dedicated run-time kernel based on the Ravenscar profile, the same used on the Goce satellite: this permits to use high-level Ada features to develop concurrent and real-time systems on the Mindstorms NXT.\n\nURBI is yet another language and is a parallel and event-driven language, with interfaces to C++/Java and Matlab. It also has a component architecture (UObject) for distribution. Urbi is compatible with many robots, including Nao (cf Robocup), Bioloid or Aibo.[21]\n\nFLL Nxt Navigation[22] is an open source program to help navigation on the FLL competition table.  It uses NXT-G and .txt files to write programs. It is unknown if you can legally implement this in FLL competitions.\n\nRuby-nxt[23] is a library to program the NXT for the Ruby programming language. Unlike the other languages for the NXT, the code is not compiled to a binary file. Instead the code is directly transmitted to the NXT via a Bluetooth connection.\n\nRobotics.NXT[24] is a Haskell interface to NXT over Bluetooth. It supports direct commands, messages and many sensors (also unofficial). It has also support for a simple message-based control of a NXT brick via remotely executed program (basic NXC code included).\n\nLibNXT[25] is a utility library for talking to the Lego Mindstorms NXT intelligent brick at a relatively low level. LibNXT is targeted mainly at the platforms that the official Lego Mindstorms NXT software overlooks, namely Linux and other unices. It will work on any POSIX-compliant operating system where libusb 0.1 libusb is supported. Windows support is also possible with the win32 port of libusb.\n\nC_NXT[26] is a library for controlling the Lego NXT licensed under the GPLv2. The library allows users to control a Lego NXT via bluetooth controller from within other C programs. The library provides low level control and high level abstraction. The library only runs on Linux.\n\nPyNXC[27] is a project which converts Python code to  \"Not Exactly C\" (NXC)[28] code, to download to Lego Mindstorms Robots.\n\nNXT-Python[29] is a python module, which communicates with the NXT via USB or Bluetooth. It supports direct commands and several aftermarket sensors.\n\nThe software which ships with the newer Mindstorms EV3 set can be used to program the NXT.[30]  At the moment, Bluetooth is not supported for the NXT, so programs must be downloaded via a USB cable.\n\nPhysical Etoys is a visual programming system for different electronic devices. It supports direct mode and compiled mode.\n\nCh is a C/C++ interpreter running C/C++ code to control Lego NXT or EV3. No firmware upload/download is required, no compilation is needed. A C/C++ code running in Ch can control either a Lego NXT, EV3, or multiple of NXT/EV3.[31]\n\n"
        },
        {
            "title": "Sensors and Actuators",
            "text": "The Lego Mindstorms NXT 1.0 base kit includes:[32]\n\nThese parts are not included in the Lego Mindstorms NXT base kit and may be bought separately:[37]\n\nThe sensors come assembled and programmed. In the software (see Programming above), people can decide what to do with the information that comes from the sensors, such as programming the robot move forward until it touches something.[citation needed]\n\nLego also sells an adapter to the Vernier sensor product line. Vernier produces data collection devices and related software for use in education.[citation needed]\n\nSensors are connected to the NXT brick using a 6-position modular connector that features both analog and digital interfaces. The analog interface is backward-compatible (using an adapter) with the older Robotics Invention System. The digital interface is capable of both I2C and RS-485 communication.\n\n"
        },
        {
            "title": "NXT 2.0",
            "text": "Lego Mindstorms NXT 2.0 is the second set from LEGO's Lego Mindstorms series, launched on August 5, 2009 at the Lego Shop in the U.S. The set contains 619 pieces, including a new sensor that can detect colors. It is priced at approximately US$280, C$350, £230 or A$500. Lego Mindstorms NXT 2.0 has a successor, called the Lego Mindstorms EV3.[38]\n\nParts can be ordered separately. In the original kit, the sensors included are the color sensor, two touch sensors, and an ultrasonic sensor:\n\nVery simple programs can be created using the NXT Intelligent Brick itself. In order to create larger, more complex programs, programming software on a PC is required. The standard programming software is NXT-G, which is included in the package. Third-party programming software is also available, some of which is listed below:\n\nNXT-G is the programming software included in the standard base kit. It is based on LabVIEW graphical programming. It features an interactive drag-and-drop environment.\n\nNXT-G is powered by LabVIEW, an industry standard in programming. Created by National Instruments, LabVIEW uses data flow programming to create a virtual instrument. To allow for more advanced programming, in the graphical sense, National Instruments released a Toolkit for the NXT. Version 1.0 came out in December 2006. Since its release, several bugs have been found and new sensors have been created. While the toolkit does allow for the creation of new sensors, National Instruments has yet to formally release an update.\n\nLego::NXT[39] provides an API between Perl and NXT.\n\nA port iof GNAT[20] is available for the NXT. It requires nxtOSEK to run. The port includes Ada bindings to the NXT hardware and nxtOSEK.\n\nNext Byte Codes (NBC) is a simple open-source language with an assembly language syntax that can be used to program the NXT brick.\n\nNot eXactly C (NXC) is a high level open-source[9] language, similar to C, built on top of the NBC compiler. It can also be used to program the NXT brick. NXC is basically NQC for the NXT.[10] It is the most widely used third-party programming language.\n\nROBOTC is an integrated development environment targeted towards students that is used to program and control Lego NXT, VEX, RCX, and Arduino robots using a programming language based on the C programming language.\n\nRoboMind is an educational programming environment that offers a concise scripting language for programming a simulated robot. These internationalized scripts can, however, also directly be exported to Lego Mindstorms robots.[40] It does not require custom firmware in order to run.\n\nNXTGCC is a GCC toolchain for programming the NXT firmware in C.\n\nURBI is a parallel and event-driven language, with interfaces to C++/Java and MATLAB. It also has a component architecture (UObject) for distributed computation. Urbi is compatible with many robots, including Nao (cf Robocup), Bioloid or Aibo.[21]\n\nleJOS NXJ is a high level open source language based on Java that uses custom firmware developed by the leJOS team.[13]\n\nTo be able to write in C (programming language)/C++, nxtOSEK can be used, but that requires custom firmware too.[14]\n\nMATLAB and Simulink code for NXT programming is freely available.\n\npbLua[19] is an implementation of the Lua programming language, a general purpose scripting language, for Lego Mindstorms.\n\nFLL Nxt Navigation[22] is an open source program to help navigation on the FLL competition table. Uses NXT-G and .txt files to write programs.\n\nruby-nxt[42] is a library to program the NXT for the Ruby programming language. Unlike the other languages for the NXT the code isn't compiled to a binary file. Instead the code is directly transmitted to the NXT via a Bluetooth connection. This method of execution is significantly slower than executing compiled code directly.\n\nRobotics.NXT[24] is a Haskell interface to NXT over Bluetooth. It supports direct commands, messages and many sensors (also unofficial). It has also support for a simple message-based control of a NXT brick via remotely executed program (basic NXC code included).\n\n"
        }
    ]
}